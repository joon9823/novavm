
oss = ["Linux (glibc)", "Linux (musl)", "macOS"]
cpus = ["x86_64", "aarch64"]
build_types = ["shared", "static"]

ZERO_WIDTH_SPACE = "\u200B"
SUPPORTED = "‚úÖ" + ZERO_WIDTH_SPACE
UNSUPPORTED = "üö´" + ZERO_WIDTH_SPACE
UNKNOWN = "ü§∑" + ZERO_WIDTH_SPACE
UNDER_CONSTRUCTION = "üèó" + ZERO_WIDTH_SPACE

def movevm_supported(os, cpu, build_type):
    if os == "Windows (mingw)":
        return UNSUPPORTED
    if os == "macOS" and build_type == "static":
        return UNSUPPORTED
    if os == "macOS" and build_type == "shared":
        return SUPPORTED + "libnovavm.dylib"
    if os == "Linux (musl)":
        if build_type == "static":
            if cpu == "x86_64":
                return SUPPORTED + "libnovaproc_muslc.x86_64.a"
            elif cpu == "aarch64":
                return SUPPORTED + "libnovaproc_muslc.aarch64.a"
        if build_type == "shared":
            return UNSUPPORTED
    if os == "Linux (glibc)":
        if build_type == "static":
            return UNSUPPORTED
        if build_type == "shared":
            if cpu == "x86_64":
                return SUPPORTED + "libnovaproc.x86_64.so"
            elif cpu == "aarch64":
                return SUPPORTED + "libnovaproc.aarch64.so"
    return UNKNOWN

def get_note(os, cpu, build_type):
    if os == "Linux (glibc)" and cpu == "x86_64" and build_type == "static":
        return "Would link libwasmvm statically but glibc dynamically as static glibc linking is not recommended. Potentially interesting for Osmosis."
    if os == "Linux (musl)" and build_type == "shared":
        return "Possible but not needed"
    return ""

def get_links():
    return """
"""

print("<!-- AUTO GENERATED BY libnovavm_builds.py START -->")
print("| OS family       | Arch    | Linking | Supported                     | Note    |")
print("| --------------- | ------- | ------- | ----------------------------- | ------- |")

for os in oss:
    for cpu in cpus:
        for build_type in build_types:
            s = movevm_supported(os, cpu, build_type)
            note = get_note(os, cpu, build_type)
            print(
                "| {:<15} | {:<7} | {:<7} | {:<29} | {} |".format(
                    os, cpu, build_type, s, note
                )
            )
# print(get_links())
print("<!-- AUTO GENERATED BY libnovavm_builds.py END -->")